node {
    try {

    notifyBuild('STARTED')
    
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '6', daysToKeepStr: '', numToKeepStr: '')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * * ')])])
    
    def mavenHome = tool name: 'Maven'
    
    stage ('Git Checkout stage'){
        
        git branch: 'development', credentialsId: '6f24b4ba-4754-4462-947e-9d1ef5ac29be', url: 'https://github.com/mss-banking-projects-venkat/maven-web-application.git'
    }
    
    stage ('Build'){
        
        sh "${mavenHome}/bin/mvn clean package"
    }
    
    stage ('Upload Into Nexus'){
        
        sh "${mavenHome}/bin/mvn clean deploy"
    }
    
    stage ('DeployToTomcat'){
        
        sshagent(['9ec35c80-6d05-4a24-998d-fc468c630647']) {
             
             sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.34.36:/opt/apache-tomcat-9.0.89/webapps/ "
      }
    }

}
catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw e
  } finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)
  }


}

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

